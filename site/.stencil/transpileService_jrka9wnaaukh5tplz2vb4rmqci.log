{"moduleFile":{"sourceFilePath":"/Users/max/git/avocado/site/src/components/plugin-api/plugin-api.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"anchor-link"}],"cmpMeta":{"tagNameMeta":"plugin-api","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/Users/max/git/avocado/site/src/components/plugin-api/plugin-api.scss","cmpRelativePath":"plugin-api.scss","originalComponentPath":"plugin-api.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"PluginApi","documentation":"","type":"typeof PluginApi"},"encapsulation":0,"componentClass":"PluginApi","membersMeta":{"el":{"memberType":7},"content":{"memberType":5},"name":{"memberType":1,"attribName":"name","attribType":{"text":"string","typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"name","documentation":"","type":"string"}},"index":{"memberType":1,"attribName":"index","attribType":{"text":"boolean","typeReferences":{}},"reflectToAttrib":false,"propType":3,"jsdoc":{"name":"index","documentation":"","type":"boolean"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/Users/max/git/avocado/site/src/components/plugin-api/plugin-api.js"},"jsText":"export class PluginApi {\r\n    componentWillLoad() {\r\n        const url = `api${this.index ? '-index' : ''}.html`;\r\n        return fetch(`/assets/docs-content/apis/${this.name}/${url}`)\r\n            .then(response => {\r\n            return response.text();\r\n        })\r\n            .then(data => {\r\n            this.content = data;\r\n            const el = document.createElement('div');\r\n            el.innerHTML = data;\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        this.bindHeadings(this.el);\r\n    }\r\n    bindHeadings(el) {\r\n        const headings = Array.from(el.querySelectorAll('h1,h2,h3,h4,h5'));\r\n        headings.forEach(h => {\r\n            h.classList.add('anchor-link-relative');\r\n            var link = document.createElement('anchor-link');\r\n            link.className = 'hover-anchor';\r\n            if (h.id) {\r\n                link.to = h.id;\r\n            }\r\n            link.innerHTML = '#';\r\n            h.insertBefore(link, h.firstChild);\r\n        });\r\n    }\r\n    render() {\r\n        return (h(\"div\", null,\r\n            h(\"div\", { innerHTML: this.content })));\r\n    }\r\n    static get is() { return \"plugin-api\"; }\r\n    static get properties() { return {\r\n        \"content\": {\r\n            \"state\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"index\": {\r\n            \"type\": Boolean,\r\n            \"attr\": \"index\"\r\n        },\r\n        \"name\": {\r\n            \"type\": String,\r\n            \"attr\": \"name\"\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:plugin-api:**/\"; }\r\n}\r\n"}