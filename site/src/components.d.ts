/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  MarkdownContent,
  MarkdownHeading,
  SiteStructureItem,
} from './global/definitions';
import {
  JSX,
} from '@stencil/core';

export namespace Components {
  interface AnchorLink {
    'to': string;
  }
  interface AppBurger {}
  interface AppIcon {
    'name': string;
  }
  interface AppMarked {
    'fetchPath'?: string;
    'renderer'?: (doc: MarkdownContent) => JSX.Element;
  }
  interface AvcCodeType {
    'typeId': string;
  }
  interface BlogPage {}
  interface CapacitorSite {
    'isLandingPage': boolean;
  }
  interface ContributorList {
    'contributors': string[];
    'link': (contributor: string) => string;
  }
  interface DemosPage {}
  interface DocSnippet {}
  interface DocumentComponent {
    'page': string;
    'pages': string[];
  }
  interface InPageNavigation {
    'currentPageUrl': string;
    'pageLinks': MarkdownHeading[];
    'srcUrl': string;
  }
  interface LandingPage {}
  interface LowerContentNav {
    'next'?: SiteStructureItem;
    'prev'?: SiteStructureItem;
  }
  interface NewsletterSignup {}
  interface PluginApi {
    'index': boolean;
    'name': string;
  }
  interface PluginPlatforms {
    'platforms': string;
  }
  interface SiteBar {}
  interface SiteHeader {}
  interface SiteMenu {
    'selectedParent': SiteStructureItem;
    'siteStructureList': SiteStructureItem[];
  }
}

declare global {


  interface HTMLAnchorLinkElement extends Components.AnchorLink, HTMLStencilElement {}
  var HTMLAnchorLinkElement: {
    prototype: HTMLAnchorLinkElement;
    new (): HTMLAnchorLinkElement;
  };

  interface HTMLAppBurgerElement extends Components.AppBurger, HTMLStencilElement {}
  var HTMLAppBurgerElement: {
    prototype: HTMLAppBurgerElement;
    new (): HTMLAppBurgerElement;
  };

  interface HTMLAppIconElement extends Components.AppIcon, HTMLStencilElement {}
  var HTMLAppIconElement: {
    prototype: HTMLAppIconElement;
    new (): HTMLAppIconElement;
  };

  interface HTMLAppMarkedElement extends Components.AppMarked, HTMLStencilElement {}
  var HTMLAppMarkedElement: {
    prototype: HTMLAppMarkedElement;
    new (): HTMLAppMarkedElement;
  };

  interface HTMLAvcCodeTypeElement extends Components.AvcCodeType, HTMLStencilElement {}
  var HTMLAvcCodeTypeElement: {
    prototype: HTMLAvcCodeTypeElement;
    new (): HTMLAvcCodeTypeElement;
  };

  interface HTMLBlogPageElement extends Components.BlogPage, HTMLStencilElement {}
  var HTMLBlogPageElement: {
    prototype: HTMLBlogPageElement;
    new (): HTMLBlogPageElement;
  };

  interface HTMLCapacitorSiteElement extends Components.CapacitorSite, HTMLStencilElement {}
  var HTMLCapacitorSiteElement: {
    prototype: HTMLCapacitorSiteElement;
    new (): HTMLCapacitorSiteElement;
  };

  interface HTMLContributorListElement extends Components.ContributorList, HTMLStencilElement {}
  var HTMLContributorListElement: {
    prototype: HTMLContributorListElement;
    new (): HTMLContributorListElement;
  };

  interface HTMLDemosPageElement extends Components.DemosPage, HTMLStencilElement {}
  var HTMLDemosPageElement: {
    prototype: HTMLDemosPageElement;
    new (): HTMLDemosPageElement;
  };

  interface HTMLDocSnippetElement extends Components.DocSnippet, HTMLStencilElement {}
  var HTMLDocSnippetElement: {
    prototype: HTMLDocSnippetElement;
    new (): HTMLDocSnippetElement;
  };

  interface HTMLDocumentComponentElement extends Components.DocumentComponent, HTMLStencilElement {}
  var HTMLDocumentComponentElement: {
    prototype: HTMLDocumentComponentElement;
    new (): HTMLDocumentComponentElement;
  };

  interface HTMLInPageNavigationElement extends Components.InPageNavigation, HTMLStencilElement {}
  var HTMLInPageNavigationElement: {
    prototype: HTMLInPageNavigationElement;
    new (): HTMLInPageNavigationElement;
  };

  interface HTMLLandingPageElement extends Components.LandingPage, HTMLStencilElement {}
  var HTMLLandingPageElement: {
    prototype: HTMLLandingPageElement;
    new (): HTMLLandingPageElement;
  };

  interface HTMLLowerContentNavElement extends Components.LowerContentNav, HTMLStencilElement {}
  var HTMLLowerContentNavElement: {
    prototype: HTMLLowerContentNavElement;
    new (): HTMLLowerContentNavElement;
  };

  interface HTMLNewsletterSignupElement extends Components.NewsletterSignup, HTMLStencilElement {}
  var HTMLNewsletterSignupElement: {
    prototype: HTMLNewsletterSignupElement;
    new (): HTMLNewsletterSignupElement;
  };

  interface HTMLPluginApiElement extends Components.PluginApi, HTMLStencilElement {}
  var HTMLPluginApiElement: {
    prototype: HTMLPluginApiElement;
    new (): HTMLPluginApiElement;
  };

  interface HTMLPluginPlatformsElement extends Components.PluginPlatforms, HTMLStencilElement {}
  var HTMLPluginPlatformsElement: {
    prototype: HTMLPluginPlatformsElement;
    new (): HTMLPluginPlatformsElement;
  };

  interface HTMLSiteBarElement extends Components.SiteBar, HTMLStencilElement {}
  var HTMLSiteBarElement: {
    prototype: HTMLSiteBarElement;
    new (): HTMLSiteBarElement;
  };

  interface HTMLSiteHeaderElement extends Components.SiteHeader, HTMLStencilElement {}
  var HTMLSiteHeaderElement: {
    prototype: HTMLSiteHeaderElement;
    new (): HTMLSiteHeaderElement;
  };

  interface HTMLSiteMenuElement extends Components.SiteMenu, HTMLStencilElement {}
  var HTMLSiteMenuElement: {
    prototype: HTMLSiteMenuElement;
    new (): HTMLSiteMenuElement;
  };
  interface HTMLElementTagNameMap {
    'anchor-link': HTMLAnchorLinkElement;
    'app-burger': HTMLAppBurgerElement;
    'app-icon': HTMLAppIconElement;
    'app-marked': HTMLAppMarkedElement;
    'avc-code-type': HTMLAvcCodeTypeElement;
    'blog-page': HTMLBlogPageElement;
    'capacitor-site': HTMLCapacitorSiteElement;
    'contributor-list': HTMLContributorListElement;
    'demos-page': HTMLDemosPageElement;
    'doc-snippet': HTMLDocSnippetElement;
    'document-component': HTMLDocumentComponentElement;
    'in-page-navigation': HTMLInPageNavigationElement;
    'landing-page': HTMLLandingPageElement;
    'lower-content-nav': HTMLLowerContentNavElement;
    'newsletter-signup': HTMLNewsletterSignupElement;
    'plugin-api': HTMLPluginApiElement;
    'plugin-platforms': HTMLPluginPlatformsElement;
    'site-bar': HTMLSiteBarElement;
    'site-header': HTMLSiteHeaderElement;
    'site-menu': HTMLSiteMenuElement;
  }
}

declare namespace LocalJSX {
  interface AnchorLink extends JSXBase.HTMLAttributes<HTMLAnchorLinkElement> {
    'to'?: string;
  }
  interface AppBurger extends JSXBase.HTMLAttributes<HTMLAppBurgerElement> {
    'onBurgerClick'?: (event: CustomEvent<any>) => void;
  }
  interface AppIcon extends JSXBase.HTMLAttributes<HTMLAppIconElement> {
    'name'?: string;
  }
  interface AppMarked extends JSXBase.HTMLAttributes<HTMLAppMarkedElement> {
    'fetchPath'?: string;
    'renderer'?: (doc: MarkdownContent) => JSX.Element;
  }
  interface AvcCodeType extends JSXBase.HTMLAttributes<HTMLAvcCodeTypeElement> {
    'typeId'?: string;
  }
  interface BlogPage extends JSXBase.HTMLAttributes<HTMLBlogPageElement> {}
  interface CapacitorSite extends JSXBase.HTMLAttributes<HTMLCapacitorSiteElement> {
    'isLandingPage'?: boolean;
  }
  interface ContributorList extends JSXBase.HTMLAttributes<HTMLContributorListElement> {
    'contributors'?: string[];
    'link'?: (contributor: string) => string;
  }
  interface DemosPage extends JSXBase.HTMLAttributes<HTMLDemosPageElement> {}
  interface DocSnippet extends JSXBase.HTMLAttributes<HTMLDocSnippetElement> {}
  interface DocumentComponent extends JSXBase.HTMLAttributes<HTMLDocumentComponentElement> {
    'page'?: string;
    'pages'?: string[];
  }
  interface InPageNavigation extends JSXBase.HTMLAttributes<HTMLInPageNavigationElement> {
    'currentPageUrl'?: string;
    'pageLinks'?: MarkdownHeading[];
    'srcUrl'?: string;
  }
  interface LandingPage extends JSXBase.HTMLAttributes<HTMLLandingPageElement> {}
  interface LowerContentNav extends JSXBase.HTMLAttributes<HTMLLowerContentNavElement> {
    'next'?: SiteStructureItem;
    'prev'?: SiteStructureItem;
  }
  interface NewsletterSignup extends JSXBase.HTMLAttributes<HTMLNewsletterSignupElement> {}
  interface PluginApi extends JSXBase.HTMLAttributes<HTMLPluginApiElement> {
    'index'?: boolean;
    'name'?: string;
  }
  interface PluginPlatforms extends JSXBase.HTMLAttributes<HTMLPluginPlatformsElement> {
    'platforms'?: string;
  }
  interface SiteBar extends JSXBase.HTMLAttributes<HTMLSiteBarElement> {}
  interface SiteHeader extends JSXBase.HTMLAttributes<HTMLSiteHeaderElement> {}
  interface SiteMenu extends JSXBase.HTMLAttributes<HTMLSiteMenuElement> {
    'selectedParent'?: SiteStructureItem;
    'siteStructureList'?: SiteStructureItem[];
  }

  interface IntrinsicElements {
    'anchor-link': AnchorLink;
    'app-burger': AppBurger;
    'app-icon': AppIcon;
    'app-marked': AppMarked;
    'avc-code-type': AvcCodeType;
    'blog-page': BlogPage;
    'capacitor-site': CapacitorSite;
    'contributor-list': ContributorList;
    'demos-page': DemosPage;
    'doc-snippet': DocSnippet;
    'document-component': DocumentComponent;
    'in-page-navigation': InPageNavigation;
    'landing-page': LandingPage;
    'lower-content-nav': LowerContentNav;
    'newsletter-signup': NewsletterSignup;
    'plugin-api': PluginApi;
    'plugin-platforms': PluginPlatforms;
    'site-bar': SiteBar;
    'site-header': SiteHeader;
    'site-menu': SiteMenu;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


