{"title":"Push Notifications with Firebase in an Ionic/Angular App","description":"Learn how to get Firebase Cloud Messaging working on iOS and Android in an Ionic app","url":"/docs/guides/push-notifications-firebase","contributors":["bryplano"],"headings":[{"id":"using-push-notifications-with-firebase-in-an-ionic-angular-app","level":1,"text":"Using Push Notifications with Firebase in an Ionic + Angular App"},{"id":"required-dependencies","level":2,"text":"Required Dependencies"},{"id":"prepare-an-ionic-app","level":2,"text":"Prepare an Ionic App"},{"id":"add-capacitor","level":2,"text":"Add Capacitor"},{"id":"building-the-app-adding-platforms","level":2,"text":"Building the App &amp; Adding Platforms"},{"id":"using-the-capacitor-push-notification-api","level":2,"text":"Using the Capacitor Push Notification API"},{"id":"creating-a-project-for-your-app-on-firebase","level":2,"text":"Creating a Project for your App on Firebase"},{"id":"android","level":2,"text":"Android"},{"id":"integrating-firebase-with-the-android-app","level":3,"text":"Integrating Firebase with the Android app"},{"id":"download-and-use-the-google-services-json-file","level":3,"text":"Download and Use the <code>google-services.json</code> file"},{"id":"ios","level":2,"text":"iOS"},{"id":"prerequisites","level":3,"text":"Prerequisites"},{"id":"integrating-firebase-with-our-native-ios-app","level":3,"text":"Integrating Firebase with our native iOS app"},{"id":"add-the-googleservice-info-plist-file-to-your-ios-app","level":3,"text":"Add the <code>GoogleService-Info.plist</code> file to your iOS app"},{"id":"add-the-firebase-sdk-via-cocoapods","level":3,"text":"Add the Firebase SDK via CocoaPods"},{"id":"update-the-project","level":3,"text":"Update the Project"},{"id":"add-initialization-code","level":3,"text":"Add Initialization Code"},{"id":"upload-the-apns-certificate-or-key-to-firebase","level":3,"text":"Upload the APNS Certificate or Key to Firebase"},{"id":"sending-a-test-notification","level":2,"text":"Sending a Test Notification"}],"srcPath":"./docs-md/guides/push-notifications-firebase.md","content":"\n<h1 id=\"using-push-notifications-with-firebase-in-an-ionic-angular-app\">\n  \n  Using Push Notifications with Firebase in an Ionic + Angular App\n  \n</h1>\n<p><strong>Web Framework</strong>: Ionic 4 + Angular<br><strong>Platforms</strong>: iOS, Android</p>\n<p>One of the most common features provided by application developers to their users is push notifications. In this tutorial, we&#39;ll walk through all the steps needed to get <a href=\"https://firebase.google.com/docs/cloud-messaging\">Firebase Cloud Messaging</a> working on iOS and Android.</p>\n<p>For the purposes of registering and monitoring for push notifications from Firebase, we&#39;ll make use of the <a href=\"https://capacitor.ionicframework.com/docs/apis/push-notifications/\">Push Notification API for Capacitor</a> in an Ionic + Angular application.</p>\n\n<h2 id=\"required-dependencies\">\n  <a class=\"heading-link\" href=\"#required-dependencies\"><ion-icon name=\"ios-link\"></ion-icon>\n  Required Dependencies\n  </a>\n</h2>\n<p>Building and deploying iOS and Android applications using Capacitor requires a bit of setup. Please <stencil-route-link  url=/docs/getting-started/dependencies>follow the instructions to install the necessary Capacitor dependencies here</stencil-route-link> before continuing.</p>\n<p>To test push notifications on iOS, Apple requires that you have <a href=\"https://developer.apple.com/\">a paid Apple Developer account</a> and a <em>physical</em> iOS device.</p>\n\n<h2 id=\"prepare-an-ionic-app\">\n  <a class=\"heading-link\" href=\"#prepare-an-ionic-app\"><ion-icon name=\"ios-link\"></ion-icon>\n  Prepare an Ionic App\n  </a>\n</h2>\n<p>If you have an existing Ionic 4 app, skip this section. If not, let&#39;s create an Ionic app first. </p>\n<p>In your preferred terminal, install the latest version of the Ionic CLI:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g ionic</code></pre>\n  </highlight-code-line>\n  <p>Next, let&#39;s use the CLI to create a new Ionic 4 app based on the <strong>blank</strong> starter project and call it <strong>capApp</strong>:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">ionic start capApp blank</code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"add-capacitor\">\n  <a class=\"heading-link\" href=\"#add-capacitor\"><ion-icon name=\"ios-link\"></ion-icon>\n  Add Capacitor\n  </a>\n</h2>\n<p>Once the application has been created successfully, switch to the newly created project directory:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> capApp/</code></pre>\n  </highlight-code-line>\n  <p>Next, let&#39;s add Capacitor and the Capacitor CLI to our new application...</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">ionic integrations <span class=\"token function\">enable</span> capacitor</code></pre>\n  </highlight-code-line>\n  <p>... and finish up by running <code>npx cap init</code>, which will allow us to fill out our app information.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap init\n? App name: CapApp\n? App Package ID: com.mydomain.myappname</code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"building-the-app-adding-platforms\">\n  <a class=\"heading-link\" href=\"#building-the-app-adding-platforms\"><ion-icon name=\"ios-link\"></ion-icon>\n  Building the App &amp; Adding Platforms\n  </a>\n</h2>\n<p>Before adding any native platforms to this project, the app must be built at least once. A web build creates the web assets directory that Capacitor needs (<code>www</code> folder in Ionic projects).</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">ionic build</code></pre>\n  </highlight-code-line>\n  <p>Next, let&#39;s add the iOS and Android platforms to our app.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap add ios\nnpx cap add android</code></pre>\n  </highlight-code-line>\n  <p>Upon running these commands, both <code>android</code> and <code>ios</code> folders at the root of the project are created. These are entirely separate native project artifacts that should be considered part of your Ionic app (i.e., check them into source control).</p>\n\n<h2 id=\"using-the-capacitor-push-notification-api\">\n  <a class=\"heading-link\" href=\"#using-the-capacitor-push-notification-api\"><ion-icon name=\"ios-link\"></ion-icon>\n  Using the Capacitor Push Notification API\n  </a>\n</h2>\n<p>Before we get to Firebase, we&#39;ll need to ensure that our application can register for push notifications by making use of the Capacitor Push Notification API. We&#39;ll also add an <code>alert</code> (you could use <code>console.log</code> statements instead) to show us the payload for a notification when it arrives and the app is open on our device.</p>\n<p>In your app, head to the <code>home.page.ts</code> file and add an <code>import</code> statement and a <code>const</code> to make use of the Capacitor Push API:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Plugins<span class=\"token punctuation\">,</span>\n  PushNotification<span class=\"token punctuation\">,</span>\n  PushNotificationToken<span class=\"token punctuation\">,</span>\n  PushNotificationActionPerformed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> PushNotifications <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  <p>Then, add the <code>ngOnInit()</code> method with some API methods to register and monitor for push notifications. We will also add an <code>alert()</code> a few of the events to monitor what is happening:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePage</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Initializing HomePage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Register with Apple / Google to receive push via APNS/FCM</span>\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// On succcess, we should be able to receive notifications</span>\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'registration'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">:</span> PushNotificationToken<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Push registration success, token: '</span> <span class=\"token operator\">+</span> token<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Some issue with our setup and push will not work</span>\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'registrationError'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error on registration: '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Show us the notification payload if the app is open on our device</span>\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pushNotificationReceived'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">:</span> PushNotification<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Push received: '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Method called when tapping on a notification</span>\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pushNotificationActionPerformed'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">:</span> PushNotificationActionPerformed<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Push action performed: '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>Here is the full implementation of <code>home.page.ts</code>:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> OnInit <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@angular/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Plugins<span class=\"token punctuation\">,</span>\n  PushNotification<span class=\"token punctuation\">,</span>\n  PushNotificationToken<span class=\"token punctuation\">,</span>\n  PushNotificationActionPerformed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> PushNotifications <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  selector<span class=\"token punctuation\">:</span> <span class=\"token string\">'app-home'</span><span class=\"token punctuation\">,</span>\n  templateUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'home.page.html'</span><span class=\"token punctuation\">,</span>\n  styleUrls<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'home.page.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePage</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">OnInit</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">ngOnInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Initializing HomePage'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'registration'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">:</span> PushNotificationToken<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Push registration success, token: '</span> <span class=\"token operator\">+</span> token<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'registrationError'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error on registration: '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pushNotificationReceived'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">:</span> PushNotification<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Push received: '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    PushNotifications<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pushNotificationActionPerformed'</span><span class=\"token punctuation\">,</span> \n      <span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">:</span> PushNotificationActionPerformed<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Push action performed: '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>notification<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"creating-a-project-for-your-app-on-firebase\">\n  <a class=\"heading-link\" href=\"#creating-a-project-for-your-app-on-firebase\"><ion-icon name=\"ios-link\"></ion-icon>\n  Creating a Project for your App on Firebase\n  </a>\n</h2>\n<p>Before we can connect Firebase Cloud Messaging to your application and send push notifications, you&#39;ll need to start a project in Firebase.</p>\n<p>Go to the <a href=\"https://console.firebase.google.com/\">Firebase Console</a> and click the <strong>Add project</strong> button.</p>\n<p>Name the project, accept the Firebase ToS and click <strong>Create project</strong> to continue. A Project ID should be automatically generated for you.</p>\n\n<h2 id=\"android\">\n  <a class=\"heading-link\" href=\"#android\"><ion-icon name=\"ios-link\"></ion-icon>\n  Android\n  </a>\n</h2>\n\n<h3 id=\"integrating-firebase-with-the-android-app\">\n  <a class=\"heading-link\" href=\"#integrating-firebase-with-the-android-app\"><ion-icon name=\"ios-link\"></ion-icon>\n  Integrating Firebase with the Android app\n  </a>\n</h3>\n<p>This section more-or-less mirrors the <a href=\"https://firebase.google.com/docs/android/setup?authuser=0\">setting up Firebase using the Firebase console documentation</a>. See below for specific Capacitor-related notes.</p>\n<p>Go to the Project Overview page for your Firebase project and, under the <strong>Grow</strong> section, click the <strong>Cloud Messaging</strong> option. At the top, click on the <strong>Android</strong> icon.</p>\n<p>The next screen will ask you for some information about your application.</p>\n<ul>\n<li>Your <strong>Android package name</strong> should match the <strong>appId</strong> from your <code>capacitor.config.json</code> file</li>\n<li>We used <code>com.mydomain.myappname</code> for this Capacitor app ID, so that is what we&#39;ll use for this entry.</li>\n<li>Nickname and Debug Signing Certificate are optional</li>\n</ul>\n<p>Then click the <strong>Register app</strong> button.</p>\n\n<h3 id=\"download-and-use-the-google-services-json-file\">\n  <a class=\"heading-link\" href=\"#download-and-use-the-google-services-json-file\"><ion-icon name=\"ios-link\"></ion-icon>\n  Download and Use the <code>google-services.json</code> file\n  </a>\n</h3>\n<p>The next prompt will ask you to download a <code>google-services.json</code> file. This file contains the information your Capacitor app needs to connect to Firebase from Android.</p>\n<p>Download the <code>google-services.json</code> file to your local machine. Then move the file into your Capacitor Android project directory, specifically under <code>android/app/</code>.</p>\n<p><img src=\"/assets/img/docs/guides/firebase-push-notifications/google-services-location-android.png\" alt=\"Google Services JSON Location for Android\"></p>\n<p>We don&#39;t need to <em>add</em> any dependencies to our project because Capacitor projects automatically include a version of <code>firebase-messaging</code> in it&#39;s <code>build.gradle</code> file.</p>\n\n<h2 id=\"ios\">\n  <a class=\"heading-link\" href=\"#ios\"><ion-icon name=\"ios-link\"></ion-icon>\n  iOS\n  </a>\n</h2>\n\n<h3 id=\"prerequisites\">\n  <a class=\"heading-link\" href=\"#prerequisites\"><ion-icon name=\"ios-link\"></ion-icon>\n  Prerequisites\n  </a>\n</h3>\n<p>iOS push notifications are significantly more complicated to set up than Android. You must have a <a href=\"https://developer.apple.com/\">paid Apple Developer account</a> <em>and</em> take care of the following items prior to being able to test push notifications with your iOS application:</p>\n<ol>\n<li><a href=\"https://help.apple.com/xcode/mac/current/#/dev60b6fbbc7\">Setup the proper Development or Production certificates &amp; provisioning profiles</a> for your iOS application in the Apple Developer Portal</li>\n<li><a href=\"https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_certificate-based_connection_to_apns\">Create an APNS certificate or key</a> for either Development or Production in the Apple Developer Portal</li>\n<li><a href=\"https://help.apple.com/xcode/mac/current/#/dev88ff319e7\">Ensure Push Notification capabilities have been enabled</a> in your application in Xcode</li>\n<li>Have a physical iOS device as per the guidelines in the <stencil-route-link  url=/docs/getting-started/dependencies>Dependencies</stencil-route-link> documentation</li>\n</ol>\n\n<h3 id=\"integrating-firebase-with-our-native-ios-app\">\n  <a class=\"heading-link\" href=\"#integrating-firebase-with-our-native-ios-app\"><ion-icon name=\"ios-link\"></ion-icon>\n  Integrating Firebase with our native iOS app\n  </a>\n</h3>\n<p>This part is very similar to the Android section above, with a few key differences.</p>\n<p>First, go to the <strong>Project Overview</strong> page for your Firebase project. If you&#39;ve been following this guide, you&#39;ll already have an Android application listed at the top of the page.</p>\n<p>To add iOS to your Firebase project, click the <strong>Add App</strong> button and select the <strong>iOS</strong> platform.</p>\n<p>The next screen will ask you for some information about your application.</p>\n<ul>\n<li>Your <strong>iOS bundle ID</strong> should match the <strong>appId</strong> from your <code>capacitor.config.json</code> file</li>\n<li>We used <code>com.mydomain.myappname</code> for this Capacitor app ID, so that is what we&#39;ll use for this entry.</li>\n<li>App Nickname and App Store ID are optional</li>\n</ul>\n<p>Then click the <strong>Register app</strong> button.</p>\n\n<h3 id=\"add-the-googleservice-info-plist-file-to-your-ios-app\">\n  <a class=\"heading-link\" href=\"#add-the-googleservice-info-plist-file-to-your-ios-app\"><ion-icon name=\"ios-link\"></ion-icon>\n  Add the <code>GoogleService-Info.plist</code> file to your iOS app\n  </a>\n</h3>\n<p><em>Note: This is <strong>not</strong> the same file used for your Android app.</em></p>\n<p>Download the <code>GoogleService-Info.plist</code> provided to your local machine.</p>\n<p>You&#39;ll then want to open Xcode...</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap <span class=\"token function\">open</span> ios</code></pre>\n  </highlight-code-line>\n  <p>... and move the <code>.plist</code> file into your Xcode project as instructed by Firebase, ensuring to add it to all targets. </p>\n<p><img src=\"/assets/img/docs/guides/firebase-push-notifications/google-plist-location-ios.png\" alt=\"Google Service Info Plist Location for iOS\"></p>\n\n<h3 id=\"add-the-firebase-sdk-via-cocoapods\">\n  <a class=\"heading-link\" href=\"#add-the-firebase-sdk-via-cocoapods\"><ion-icon name=\"ios-link\"></ion-icon>\n  Add the Firebase SDK via CocoaPods\n  </a>\n</h3>\n<p>The Push Notification API on iOS makes use of CocoaPods - an iOS dependency management system - and we need to tell CocoaPods to make use of Firebase.</p>\n<p>To do this, we need to modify the <code>Podfile</code>, which can be found in Xcode under <code>Pods</code>:</p>\n<p><img src=\"/assets/img/docs/guides/firebase-push-notifications/podfile-location-ios.png\" alt=\"Podfile Location iOS\"></p>\n<p>We need to add Firebase to the CocoaPods provided for our App target. To do that, add <code>pod Firebase/Messaging</code> to your <code>target &#39;App&#39;</code> section, like so:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-ruby\"><code class=\"language-ruby\">target 'App' do\ncapacitor_pods\n# Add your Pods here\npod 'Firebase/Messaging' # Add this line\nend</code></pre>\n  </highlight-code-line>\n  <p>Your <code>Podfile</code> should look something like this:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-ruby\"><code class=\"language-ruby\">platform :ios, '11.0'\nuse_frameworks!\n\n# workaround to avoid Xcode 10 caching of Pods that requires\n# Product -&gt; Clean Build Folder after new Cordova plugins installed\n# Requires CocoaPods 1.6 or newer\ninstall! 'cocoapods', :disable_input_output_paths =&gt; true\n\ndef capacitor_pods\n  # Automatic Capacitor Pod dependencies, do not delete\n  pod 'Capacitor', :path =&gt; '../../node_modules/@capacitor/ios'\n  pod 'CapacitorCordova', :path =&gt; '../../node_modules/@capacitor/ios'\n\n  # Do not delete\nend\n\ntarget 'App' do\n  capacitor_pods\n  # Add your Pods here\n  pod 'Firebase/Messaging'\nend</code></pre>\n  </highlight-code-line>\n  \n<h3 id=\"update-the-project\">\n  <a class=\"heading-link\" href=\"#update-the-project\"><ion-icon name=\"ios-link\"></ion-icon>\n  Update the Project\n  </a>\n</h3>\n<p>Now we&#39;ll need to ensure that our iOS project is updated with the proper Firebase CocoaPod installed.</p>\n<p><em>Note: This part can take a while as CocoaPods needs to download all the appropriate files/dependencies.</em></p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap update ios</code></pre>\n  </highlight-code-line>\n  \n<h3 id=\"add-initialization-code\">\n  <a class=\"heading-link\" href=\"#add-initialization-code\"><ion-icon name=\"ios-link\"></ion-icon>\n  Add Initialization Code\n  </a>\n</h3>\n<p>To connect to Firebase when your iOS app starts up, you need to add the following to your <code>AppDelegate.swift</code> file.</p>\n<p>First, add an <code>import</code> at the top of the file:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-swift\"><code class=\"language-swift\">import Firebase</code></pre>\n  </highlight-code-line>\n  <p>... and then add the configuration method for Firebase to initialization code to your <code>AppDelegate.swift</code> file, in the <code>application(didFinishLaunchingWithOptions)</code> method.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-swift\"><code class=\"language-swift\">FirebaseApp.configure()</code></pre>\n  </highlight-code-line>\n  <p>Your completed <code>AppDelegate.swift</code> file should look something like this:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-swift\"><code class=\"language-swift\">import UIKit\nimport Capacitor\nimport Firebase\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n  var window: UIWindow?\n\n\n  func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&gt; Bool {\n    // Override point for customization after application launch.\n    FirebaseApp.configure()\n    return true\n  }</code></pre>\n  </highlight-code-line>\n  \n<h3 id=\"upload-the-apns-certificate-or-key-to-firebase\">\n  <a class=\"heading-link\" href=\"#upload-the-apns-certificate-or-key-to-firebase\"><ion-icon name=\"ios-link\"></ion-icon>\n  Upload the APNS Certificate or Key to Firebase\n  </a>\n</h3>\n<p>If you followed the instructions from the beginning, you&#39;ll have created an Apple APNS Certificate or an APNS Auth Key in the Apple Developer portal. You need to upload one of these to Firebase before Firebase can talk to APNS and send push notifications to your application.</p>\n<p>To upload your certificate or auth key, from the <strong>Project Overview</strong> page:</p>\n<ol>\n<li>Click on your iOS application and then the <strong>Settings</strong> gear icon.</li>\n<li>On the Settings page, click on the <strong>Cloud Messaging</strong> tab.</li>\n<li>Under the <strong>iOS app configuration</strong> header, upload your Auth Key or Certificate(s) using the provided <strong>Upload</strong> button.</li>\n</ol>\n\n<h2 id=\"sending-a-test-notification\">\n  <a class=\"heading-link\" href=\"#sending-a-test-notification\"><ion-icon name=\"ios-link\"></ion-icon>\n  Sending a Test Notification\n  </a>\n</h2>\n<p>Now for the fun part - let&#39;s verify that push notifications from Firebase are working on Android and iOS!</p>\n<p>We need to fire up our application on Android or iOS so that our <code>home.page.ts</code> page can register and receive notifications.</p>\n<p>To open your Android project in Android Studio:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap <span class=\"token function\">open</span> android</code></pre>\n  </highlight-code-line>\n  <p>To open your iOS project in Xcode:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap <span class=\"token function\">open</span> ios</code></pre>\n  </highlight-code-line>\n  <p>Once the project is open, side-load the application on your device using the Run feature of either Android Studio or Xcode. The app should start up on the home page.</p>\n<p><em>Note: On iOS, you will see a popup asking you to allow notifications for your app - make sure you choose to <strong>Allow notifications</strong>!</em></p>\n<p>If your app successfully registers and you followed the code above, you should see an alert with a success message!</p>\n<p>Now we&#39;ll test to see if the notifications are received by our device. To send a notification, in Firebase, go to the <strong>Cloud Messaging</strong> section under the Grow header in the project pane. </p>\n<p>Next, select the <strong>New Notification</strong> button. </p>\n<p>When creating the notification, you only need to specify the following information:</p>\n<ol>\n<li>The text of the notification</li>\n<li>The title (Android only, optional for iOS)</li>\n<li>The Target (either a user segment or topic; I recommend just targeting the iOS or Android app itself, see below)</li>\n</ol>\n<p><img src=\"/assets/img/docs/guides/firebase-push-notifications/change-push-target-firebase.png\" alt=\"Change Push Target Firebase\"></p>\n<ol start=\"4\">\n<li>The Scheduling (leave this to &quot;Now&quot;)</li>\n</ol>\n<p>At that point, you can <strong>Review</strong> the notification you&#39;ve put together and select <strong>Publish</strong> to send the notification out.</p>\n<p>If you&#39;ve setup your application correctly, you&#39;ll see an alert pop up on your home screen with the push notification you composed in Firebase. You can then tap on the notification and you should get an <code>alert</code> for the <code>pushActionPerformed</code> event, per our code above.</p>\n<p><img src=\"/assets/img/docs/guides/firebase-push-notifications/push-test-android.png\" alt=\"Push Test Android\"></p>\n<p><img src=\"/assets/img/docs/guides/firebase-push-notifications/push-test-ios.png\" alt=\"Push Test iOS\"></p>\n"}