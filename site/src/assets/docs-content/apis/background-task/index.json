{"title":"Background Tasks","description":"Background Task API","url":"/docs/apis/background-task","contributors":["mlynch","jcesarmobile"],"headings":[{"id":"background-tasks","level":1,"text":"Background Tasks"},{"id":"background-task-guidelines","level":2,"text":"Background Task Guidelines"},{"id":"example","level":2,"text":"Example"},{"id":"api","level":2,"text":"API"}],"srcPath":"./docs-md/apis/background-task/index.md","content":"<p><plugin-platforms platforms=\"ios,android\"></plugin-platforms></p>\n\n<h1 id=\"background-tasks\">\n  \n  Background Tasks\n  \n</h1>\n<p>The Background Task API makes it easy to run background tasks. Currently, this plugin\nsupports running a task when the app is backgrounded, and soon will support periodic background\nfetch operations.</p>\n<p><plugin-api index=\"true\" name=\"background-task\"></plugin-api></p>\n\n<h2 id=\"background-task-guidelines\">\n  <a class=\"heading-link\" href=\"#background-task-guidelines\"><ion-icon name=\"ios-link\"></ion-icon>\n  Background Task Guidelines\n  </a>\n</h2>\n<p>Mobile operating systems have strict, constantly changing guidelines for background tasks. Running\nindefinitely in the background is limited to apps that need to play audio, maintain VoIP connections,\ntrack geolocation for navigation purposes, and a limited set of other tasks. All other apps should\nexpect to perform periodic, short background tasks, such as finishing an upload when the app goes to the\nbackground, and periodically syncing data.</p>\n<p>Plugins that claim to offer infinite background operation outside of those core use cases _will cause App Store rejections_! This limitation is the same for developers using any mobile app technology, not just Capacitor.</p>\n<p>Generally, Android is less strict about background tasks, but your app should code to the lowest common denominator\nin order to be a good actor on all platforms.</p>\n<p>NOTE: On iOS <code>setTimeout</code> and <code>setInterval</code> won&#39;t work once your app is in background, so don&#39;t use them inside <code>beforeExit</code>.</p>\n\n<h2 id=\"example\">\n  <a class=\"heading-link\" href=\"#example\"><ion-icon name=\"ios-link\"></ion-icon>\n  Example\n  </a>\n</h2>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> App<span class=\"token punctuation\">,</span> BackgroundTask <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span>\n\nApp<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'appStateChange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>state<span class=\"token punctuation\">.</span>isActive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// The app has become inactive. We should check if we have some work left to do, and, if so,</span>\n    <span class=\"token comment\">// execute a background task that will allow us to finish that work before the OS</span>\n    <span class=\"token comment\">// suspends or terminates our app:</span>\n\n    <span class=\"token keyword\">let</span> taskId <span class=\"token operator\">=</span> BackgroundTask<span class=\"token punctuation\">.</span><span class=\"token function\">beforeExit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// In this function We might finish an upload, let a network request</span>\n      <span class=\"token comment\">// finish, persist some data, or perform some other task</span>\n\n      <span class=\"token comment\">// Example of long task</span>\n      <span class=\"token keyword\">var</span> start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span> <span class=\"token number\">1e18</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// Must call in order to end our task otherwise</span>\n      <span class=\"token comment\">// we risk our app being terminated, and possibly</span>\n      <span class=\"token comment\">// being labeled as impacting battery life</span>\n      BackgroundTask<span class=\"token punctuation\">.</span><span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        taskId\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"api\">\n  <a class=\"heading-link\" href=\"#api\"><ion-icon name=\"ios-link\"></ion-icon>\n  API\n  </a>\n</h2>\n<p><plugin-api name=\"background-task\"></plugin-api></p>\n"}