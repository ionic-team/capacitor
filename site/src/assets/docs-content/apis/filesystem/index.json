{"title":"Filesystem","description":"Filesystem API","url":"/docs/apis/filesystem","contributors":["mlynch","jcesarmobile"],"headings":[{"id":"filesystem","level":1,"text":"Filesystem"},{"id":"understanding-directories-and-files","level":2,"text":"Understanding Directories and Files"},{"id":"example","level":2,"text":"Example"},{"id":"api","level":2,"text":"API"}],"srcPath":"./docs-md/apis/filesystem/index.md","content":"<p><plugin-platforms platforms=\"pwa,ios,android,electron\"></plugin-platforms></p>\n\n<h1 id=\"filesystem\">\n  \n  Filesystem\n  \n</h1>\n<p>The Filsystem API provides a NodeJS-like API for working with files on the device.</p>\n<p><plugin-api index=\"true\" name=\"filesystem\"></plugin-api></p>\n\n<h2 id=\"understanding-directories-and-files\">\n  <a class=\"heading-link\" href=\"#understanding-directories-and-files\"><ion-icon name=\"ios-link\"></ion-icon>\n  Understanding Directories and Files\n  </a>\n</h2>\n<p>iOS and Android have additional layers of separation between files, such as special directories that are backed up to the Cloud, or ones for storing Documents. The Filesystem API offers a simple way to scope each operation to a specific special directory on the device.</p>\n<p>Additionally, the Filesystem API supports using full <code>file://</code> paths, or reading <code>content://</code> files on Android. Simply\nleave out the <code>directory</code> param to use a full file path.</p>\n\n<h2 id=\"example\">\n  <a class=\"heading-link\" href=\"#example\"><ion-icon name=\"ios-link\"></ion-icon>\n  Example\n  </a>\n</h2>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins<span class=\"token punctuation\">,</span> FilesystemDirectory<span class=\"token punctuation\">,</span> FilesystemEncoding <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Filesystem <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fileWrite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets/text.txt'</span><span class=\"token punctuation\">,</span>\n      data<span class=\"token punctuation\">:</span> <span class=\"token string\">\"This is a test\"</span><span class=\"token punctuation\">,</span>\n      directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents<span class=\"token punctuation\">,</span>\n      encoding<span class=\"token punctuation\">:</span> FilesystemEncoding<span class=\"token punctuation\">.</span><span class=\"token constant\">UTF8</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unable to write file'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">fileRead</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> contents <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets/text.txt'</span><span class=\"token punctuation\">,</span>\n    directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents<span class=\"token punctuation\">,</span>\n    encoding<span class=\"token punctuation\">:</span> FilesystemEncoding<span class=\"token punctuation\">.</span><span class=\"token constant\">UTF8</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">fileAppend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">appendFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets/text.txt'</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token punctuation\">:</span> <span class=\"token string\">\"MORE TESTS\"</span><span class=\"token punctuation\">,</span>\n    directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents<span class=\"token punctuation\">,</span>\n    encoding<span class=\"token punctuation\">:</span> FilesystemEncoding<span class=\"token punctuation\">.</span><span class=\"token constant\">UTF8</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">fileDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets/text.txt'</span><span class=\"token punctuation\">,</span>\n    directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets'</span><span class=\"token punctuation\">,</span>\n      directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents<span class=\"token punctuation\">,</span>\n      createIntermediateDirectories<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// like mkdir -p</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unable to make directory'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets'</span><span class=\"token punctuation\">,</span>\n      directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unable to remove directory'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets'</span><span class=\"token punctuation\">,</span>\n      directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unable to read dir'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">stat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'secrets/text.txt'</span><span class=\"token punctuation\">,</span>\n      directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Documents\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unable to stat file'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token function\">readFilePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Here's an example of reading a file with a full file path. Use this to</span>\n  <span class=\"token comment\">// read binary data (base64 encoded) from plugins that return File URIs, such as</span>\n  <span class=\"token comment\">// the Camera.</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token string\">'file:///var/mobile/Containers/Data/Application/22A433FD-D82D-4989-8BE6-9FC49DEA20BB/Documents/text.txt'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"api\">\n  <a class=\"heading-link\" href=\"#api\"><ion-icon name=\"ios-link\"></ion-icon>\n  API\n  </a>\n</h2>\n<p><plugin-api name=\"filesystem\"></plugin-api></p>\n"}