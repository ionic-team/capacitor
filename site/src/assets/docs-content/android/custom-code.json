{"title":"Custom Native Android Code","description":"Custom Native Android Code","url":"/docs/android/custom-code","contributors":["mlynch","jcesarmobile"],"headings":[{"id":"custom-native-android-code","level":1,"text":"Custom Native Android Code"},{"id":"webview-accessible-native-code","level":2,"text":"WebView Accessible Native Code"},{"id":"private-native-code","level":2,"text":"Private Native Code"}],"srcPath":"./docs-md/android/custom-code.md","content":"\n<h1 id=\"custom-native-android-code\">\n  \n  Custom Native Android Code\n  \n</h1>\n<p class=\"intro\">Many apps will want to add custom Java code to implement native features, without the overhead of building and publishing a proper Capacitor plugin.</a>\n\n<p class=\"intro\">There are two ways to do this depending on whether or not you need to access that code from the WebView:</a>\n\n\n<h2 id=\"webview-accessible-native-code\">\n  <a class=\"heading-link\" href=\"#webview-accessible-native-code\"><ion-icon name=\"ios-link\"></ion-icon>\n  WebView Accessible Native Code\n  </a>\n</h2>\n<p>The easiest way to build custom native code that needs to be accessible in the WebView is to build\na local Capacitor plugin for it. In this case, building the plugin is as simple as building a class\nthat inherits from <code>com.getcapacitor.Plugin</code> and uses the <code>@NativePlugin()</code> and <code>@PluginMethod()</code> annotations:</p>\n<p><code>com/example/myapp/CustomNativePlugin.java</code>:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-java\"><code class=\"language-java\">package com.example.myapp;\n\nimport com.getcapacitor.NativePlugin;\nimport com.getcapacitor.Plugin;\nimport com.getcapacitor.PluginCall;\nimport com.getcapacitor.PluginMethod;\n\n@NativePlugin()\npublic class CustomNativePlugin extends Plugin {\n\n  @PluginMethod()\n  public void customCall(PluginCall call) {\n    String message = call.getString(\"message\");\n    call.success();\n  }\n}</code></pre>\n  </highlight-code-line>\n  <p>Finally, register the plugin in your Activity:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-java\"><code class=\"language-java\">// Other imports...\nimport com.example.myapp.CustomNativePlugin;\n\npublic class MainActivity extends BridgeActivity {\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    // Initializes the Bridge\n    this.init(savedInstanceState, new ArrayList&lt;Class&lt;? extends Plugin&gt;&gt;() {{\n      // Additional plugins you've installed go here\n      // Ex: add(TotallyAwesomePlugin.class);\n      add(CustomNativePlugin.class);\n    }});\n  }\n}</code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"private-native-code\">\n  <a class=\"heading-link\" href=\"#private-native-code\"><ion-icon name=\"ios-link\"></ion-icon>\n  Private Native Code\n  </a>\n</h2>\n<p>If your code doesn&#39;t need to be accessible from the WebView, then simply add your code anywhere it needs to go. With Capacitor, you have full\ncontrol over your native project. Need to add a new event handler in your Activity? Just update <code>MainActivity</code> and add it. The world is truly your oyster.</p>\n"}