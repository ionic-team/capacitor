{"title":"Installing Capacitor","description":"Installing Capacitor","url":"/docs/getting-started","contributors":["dotnetkow","jcesarmobile"],"headings":[{"id":"installing-capacitor","level":1,"text":"Installing Capacitor"},{"id":"before-you-start","level":2,"text":"Before you start"},{"id":"adding-capacitor-to-an-existing-ionic-app","level":2,"text":"Adding Capacitor to an existing Ionic App"},{"id":"adding-capacitor-to-an-existing-web-app","level":2,"text":"Adding Capacitor to an existing web app"},{"id":"optional-starting-a-fresh-project","level":2,"text":"Optional: Starting a fresh project"},{"id":"where-to-go-next","level":2,"text":"Where to go next"}],"srcPath":"./docs-md/getting-started/index.md","content":"\n<h1 id=\"installing-capacitor\">\n  \n  Installing Capacitor\n  \n</h1>\n<p class=\"intro\">There are two ways to start using Capacitor: adding Capacitor to an existing frontend project (recommended), or starting a fresh project. Capacitor was designed primarily to drop-in to existing frontend projects, but comes with a simple starting project structure if you'd like to start fresh.</p>\n\n<p class=\"intro\">Capacitor provides a native mobile runtime and API layer for web apps. It does <em>not</em> come with any specific\nset of UI controls which you will most likely need unless you're building a game or something similar.</p>\n\n<p class=\"intro\">We strongly recommend starting a Capacitor project with your mobile frontend framework of choice (such as <a href=\"https://ionicframework.com\" target=\"_blank\">Ionic</a>).</p>\n\n\n<h2 id=\"before-you-start\">\n  <a class=\"heading-link\" href=\"#before-you-start\"><ion-icon name=\"ios-link\"></ion-icon>\n  Before you start\n  </a>\n</h2>\n<p>Make sure you have all the required <stencil-route-link  url=/docs/getting-started/dependencies>Dependencies</stencil-route-link> installed for the platforms you will be building for. Most importantly,\nmake sure you update CocoaPods using <code>pod repo update</code> before starting a new project, if you plan on building for iOS using a Mac.</p>\n\n<h2 id=\"adding-capacitor-to-an-existing-ionic-app\">\n  <a class=\"heading-link\" href=\"#adding-capacitor-to-an-existing-ionic-app\"><ion-icon name=\"ios-link\"></ion-icon>\n  Adding Capacitor to an existing Ionic App\n  </a>\n</h2>\n<p><a href=\"/docs/getting-started/with-ionic\">See here.</a></p>\n\n<h2 id=\"adding-capacitor-to-an-existing-web-app\">\n  <a class=\"heading-link\" href=\"#adding-capacitor-to-an-existing-web-app\"><ion-icon name=\"ios-link\"></ion-icon>\n  Adding Capacitor to an existing web app\n  </a>\n</h2>\n<p>Capacitor was designed to drop-in to any existing modern JS web app. A valid <code>package.json</code> file and a folder containing all web assets are required to get started.</p>\n<p>To add Capacitor to your web app, run the following commands:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cd</span> my-app\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save @capacitor/core @capacitor/cli</code></pre>\n  </highlight-code-line>\n  <p>Then, initialize Capacitor with your app information.</p>\n<p><em>Note: <code>npx</code> is a new utility available in npm 5 or above that executes local binaries/scripts to avoid global installs.</em></p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap init</code></pre>\n  </highlight-code-line>\n  <p>This command will prompt you to enter the name of your app and the app id (the package name for Android and the bundle identifier for iOS). Use the <code>--web-dir</code> flag to set the web assets folder (the default is <code>www</code>).</p>\n<p>Next, install any of the desired native platforms:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx cap add android\nnpx cap add ios\nnpx cap add electron</code></pre>\n  </highlight-code-line>\n  <p>ðŸŽ‰ Capacitor is now installed in your project. ðŸŽ‰</p>\n\n<h2 id=\"optional-starting-a-fresh-project\">\n  <a class=\"heading-link\" href=\"#optional-starting-a-fresh-project\"><ion-icon name=\"ios-link\"></ion-icon>\n  Optional: Starting a fresh project\n  </a>\n</h2>\n<p>Capacitor comes with a stock project structure if you&#39;d rather start fresh and plan to add a UI/frontend framework separately.</p>\n<p>To create it, run:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code class=\"language-bash\">npx @capacitor/cli create</code></pre>\n  </highlight-code-line>\n  <p>This command will prompt you to enter the name of your app and the app id (the package name for Android and the bundle identifier for iOS).</p>\n<p>This will create a very simple starting app with no UI library.</p>\n\n<h2 id=\"where-to-go-next\">\n  <a class=\"heading-link\" href=\"#where-to-go-next\"><ion-icon name=\"ios-link\"></ion-icon>\n  Where to go next\n  </a>\n</h2>\n<p>Make sure you have the <a href=\"/docs/getting-started/dependencies\">Required Dependencies</a> installed, including <a href=\"/docs/pwa-elements\">PWA Elements</a>, then proceed to the\n<a href=\"/docs/basics/workflow\">Developer Workflow Guide</a> to learn how Capacitor apps are built.</p>\n"}