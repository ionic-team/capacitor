{"title":"Capacitor Web/PWA Plugin Guide","description":"Capacitor Web/PWA Plugin Guide","url":"/docs/plugins/web","contributors":["mlynch","jcesarmobile"],"headings":[{"id":"capacitor-web-pwa-plugin-guide","level":1,"text":"Capacitor Web/PWA Plugin Guide"},{"id":"getting-started","level":2,"text":"Getting Started"},{"id":"example","level":2,"text":"Example"}],"srcPath":"./docs-md/plugins/web.md","content":"\n<h1 id=\"capacitor-web-pwa-plugin-guide\">\n  \n  Capacitor Web/PWA Plugin Guide\n  \n</h1>\n<p class=\"intro\">Capacitor utilizes a web/native compatibility layer, making it easy to build plugins that have functionality when running natively, as well as when running in a PWA on the Web.</p>\n\n\n<h2 id=\"getting-started\">\n  <a class=\"heading-link\" href=\"#getting-started\"><ion-icon name=\"ios-link\"></ion-icon>\n  Getting Started\n  </a>\n</h2>\n<p>To get started, first generate a plugin as shown in the <a href=\"./#getting-started\">Getting Started</a> section of the Plugin guide.</p>\n<p>Next, open <code>your-plugin/src/web.ts</code> in your editor of choice.</p>\n\n<h2 id=\"example\">\n  <a class=\"heading-link\" href=\"#example\"><ion-icon name=\"ios-link\"></ion-icon>\n  Example\n  </a>\n</h2>\n<p>The basic structure of a Web plugin looks like this, follow the comments inline for\nmore explanation:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WebPlugin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyPluginWeb</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebPlugin</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Call super with the name of our plugin (this should match the native name),</span>\n    <span class=\"token comment\">// along with the platforms this plugin will activate on. For example, it's possible</span>\n    <span class=\"token comment\">// to use a web plugin for Android and iOS by adding them to the platforms list (lowercased)</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'MyPlugin'</span><span class=\"token punctuation\">,</span>\n      platforms<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'web'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">echo</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ECHO'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Instantiate the plugin</span>\n<span class=\"token keyword\">const</span> MyPlugin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyPluginWeb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Export the plugin</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> MyPlugin <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  <p>Finally, make sure your <code>src/index.ts</code> has this line:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./web'</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  "}