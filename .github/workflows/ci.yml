name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ce177499ccf9fd2aded3b0426c97e5434c2e8a73
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Latest
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
  lint:
    runs-on: macos-11
    timeout-minutes: 30
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run lint
  test-cli:
    runs-on: macos-11
    timeout-minutes: 30
    needs:
      - setup
      - lint
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run build
        working-directory: ./cli
      - run: npm test
        working-directory: ./cli
  test-core:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - setup
      - lint
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run build
        working-directory: ./core
      - run: npm test
        working-directory: ./core
  test-ios:
    runs-on: macos-11
    timeout-minutes: 30
    needs:
      - setup
      - lint
    strategy:
      matrix:
        xcode:
          - /Applications/Xcode_12.4.app
    steps:
      - run: sudo xcode-select --switch ${{ matrix.xcode }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run verify
        working-directory: ./ios
  test-android:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - setup
      - lint
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run verify
        working-directory: ./android
  deploy-next:
    runs-on: macos-11
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Release') && (contains(github.event.head_commit.message, 'rc') || contains(github.event.head_commit.message, 'beta') || contains(github.event.head_commit.message, 'alpha'))
    timeout-minutes: 30
    needs:
      - setup
      - lint
      - test-cli
      - test-core
      - test-ios
      - test-android
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run lerna:publish:next || true
  deploy-latest:
    runs-on: macos-11
    if: github.event_name == 'push' && github.ref == 'refs/heads/3.x' && startsWith(github.event.head_commit.message, 'Release') && (!contains(github.event.head_commit.message, 'rc') && !contains(github.event.head_commit.message, 'beta') && !contains(github.event.head_commit.message, 'alpha'))
    timeout-minutes: 30
    needs:
      - setup
      - lint
      - test-cli
      - test-core
      - test-ios
      - test-android
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run lerna:publish:latest || true
  # publish-android:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: set up JDK 11
  #     uses: actions/setup-java@v2
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #   - name: Grant execute permission for gradlew
  #     run: chmod +x ./android/gradlew
  #   - name: Grant execute permission for publishing script
  #     run: chmod +x ./scripts/publish-android.sh
  #   - name: Run publish script
  #     working-directory: ./scripts
  #     env:
  #       ANDROID_OSSRH_USERNAME: ${{ secrets.ANDROID_OSSRH_USERNAME }}
  #       ANDROID_OSSRH_PASSWORD: ${{ secrets.ANDROID_OSSRH_PASSWORD }}
  #       ANDROID_SIGNING_KEY_ID: ${{ secrets.ANDROID_SIGNING_KEY_ID }}
  #       ANDROID_SIGNING_PASSWORD: ${{ secrets.ANDROID_SIGNING_PASSWORD }}
  #       ANDROID_SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
  #       ANDROID_SONATYPE_STAGING_PROFILE_ID: ${{ secrets.ANDROID_SONATYPE_STAGING_PROFILE_ID }}
  #     run: ./publish-android.sh
